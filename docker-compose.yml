services:
  mariadb:
    image: mariadb:12.0.2
    container_name: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: websocket_db
      MYSQL_USER: root
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    networks:
      - local-kafka
    volumes:
      - ./volumes/mariadb:/var/lib/mysql

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - local-kafka
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
      - "61613:61613"  # STOMP
      - "15674:15674"  # Web-STOMP (websocket)
    volumes:
      - ./volumes/rabbitmq:/var/lib/rabbitmq
    command: >
      sh -c "rabbitmq-plugins enable --offline rabbitmq_stomp rabbitmq_web_stomp && rabbitmq-server"

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - local-kafka
    volumes:
      - ./volumes/zookeeper/data:/var/lib/zookeeper/data
      - ./volumes/zookeeper/logs:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    networks:
      - local-kafka
    volumes:
      - ./volumes/kafka:/var/lib/kafka/data
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    networks:
      - local-kafka
    depends_on: 
      - kafka
    ports:
      - "7777:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=broker
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
  redis:
    image: redis:8.2.1
    container_name: redis
    command: ["redis-server", "--appendonly", "yes"]
    ports:
      - "6379:6379"
    networks:
      - local-kafka
    volumes:
      - ./volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  local-kafka:
    driver: bridge
  # app:
  #   image: your-spring-boot-app:latest  # Replace with your built image
  #   container_name: websocket_demo_app
  #   depends_on:
  #     - mariadb
  #     - rabbitmq
  #     - kafka
  #   ports:
  #     - "8080:8080"  # Adjust if your app runs on a different port
  #   environment:
  #     SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/websocket_db
  #     SPRING_RABBITMQ_HOST: rabbitmq
  #     SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092